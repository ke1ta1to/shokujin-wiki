// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ユーザー
model User {
  id     Int    @id @default(autoincrement())
  authId String @unique // Supabase Auth ID

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Review  Review[]
  Product Product[]

  // 記事関連
  articles Article[]
}

// 注文記録（投稿）
model Review {
  id Int @id @default(autoincrement())

  comment   String
  imageUrls String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  productId Int?
  product   Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
}

// 商品
model Product {
  id Int @id @default(autoincrement())

  name       String  @unique
  price      Int
  isVerified Boolean @default(false) // 商品が承認済みかどうか

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Review    Review[]

  // 記事との関連
  articles ArticleProduct[]
}

// 記事
model Article {
  id Int @id @default(autoincrement())

  title       String // 記事タイトル
  slug        String  @unique // URLパス用（例: "ramen-special-guide"）
  content     String // マークダウン形式の本文
  isPublished Boolean @default(false) // 公開状態

  userId Int // 作成者
  user   User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 商品との関連（多対多）
  products ArticleProduct[]

  @@index([slug])
}

// 記事と商品の中間テーブル
model ArticleProduct {
  articleId Int
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([articleId, productId])
}
