// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ユーザー
model User {
  id     Int    @id @default(autoincrement())
  authId String @unique // Supabase Auth ID

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Review             Review[]
  Product            Product[]
  ProductDescription ProductDescription[]
}

// 注文記録（投稿）
model Review {
  id Int @id @default(autoincrement())

  comment   String
  imageUrls String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  productId Int?
  product   Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
}

// 商品
model Product {
  id Int @id @default(autoincrement())

  name       String  @unique
  price      Int
  isVerified Boolean @default(false) // 商品が承認済みかどうか

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Review             Review[]
  ProductDescription ProductDescription?
}

// 商品説明文
model ProductDescription {
  id Int @id @default(autoincrement())

  content String // マークダウン形式の説明文

  productId Int     @unique
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  lastEditedUserId Int? // 最後に編集したユーザー
  lastEditedUser   User? @relation(fields: [lastEditedUserId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
