name: Prisma Migration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main

jobs:
  wait:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check.outputs.conclusion }}
    steps:
      - uses: fountainhead/action-wait-for-check@v1.2.0
        id: check
        with:
          checkName: Supabase Preview
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  migrate:
    needs:
      - wait
    if: ${{ needs.wait.outputs.status == 'success' }}
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase --experimental branches get "$GITHUB_HEAD_REF" -o env >> $GITHUB_ENV
      - run: psql "$DATABASE_URL" -c "SELECT 1;"
        env:
          DATABASE_URL: ${{ secrets.DB_URL_NON_POOLING }}
      - run: pnpm install --frozen-lockfile
      - run: pnpm -F @repo/web exec prisma migrate deploy
        env:
          POSTGRES_PRISMA_URL: ${{ secrets.DB_URL }}
          POSTGRES_URL_NON_POOLING: ${{ secrets.DB_URL_NON_POOLING }}
